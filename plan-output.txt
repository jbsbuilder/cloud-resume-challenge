
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.cloudfront.aws_cloudfront_distribution.root_s3_distribution[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudfront_distribution" "root_s3_distribution" {
      [32m+[0m[0m arn                             = (known after apply)
      [32m+[0m[0m caller_reference                = (known after apply)
      [32m+[0m[0m continuous_deployment_policy_id = (known after apply)
      [32m+[0m[0m domain_name                     = (known after apply)
      [32m+[0m[0m enabled                         = true
      [32m+[0m[0m etag                            = (known after apply)
      [32m+[0m[0m hosted_zone_id                  = (known after apply)
      [32m+[0m[0m http_version                    = "http2"
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m in_progress_validation_batches  = (known after apply)
      [32m+[0m[0m is_ipv6_enabled                 = true
      [32m+[0m[0m last_modified_time              = (known after apply)
      [32m+[0m[0m price_class                     = "PriceClass_All"
      [32m+[0m[0m retain_on_delete                = false
      [32m+[0m[0m staging                         = false
      [32m+[0m[0m status                          = (known after apply)
      [32m+[0m[0m tags_all                        = (known after apply)
      [32m+[0m[0m trusted_key_groups              = (known after apply)
      [32m+[0m[0m trusted_signers                 = (known after apply)
      [32m+[0m[0m wait_for_deployment             = true

      [32m+[0m[0m default_cache_behavior {
          [32m+[0m[0m allowed_methods        = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
            ]
          [32m+[0m[0m cached_methods         = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
            ]
          [32m+[0m[0m compress               = false
          [32m+[0m[0m default_ttl            = 0
          [32m+[0m[0m max_ttl                = 0
          [32m+[0m[0m min_ttl                = 0
          [32m+[0m[0m target_origin_id       = (known after apply)
          [32m+[0m[0m trusted_key_groups     = (known after apply)
          [32m+[0m[0m trusted_signers        = (known after apply)
          [32m+[0m[0m viewer_protocol_policy = "allow-all"

          [32m+[0m[0m forwarded_values {
              [32m+[0m[0m headers                 = [
                  [32m+[0m[0m "Origin",
                ]
              [32m+[0m[0m query_string            = true
              [32m+[0m[0m query_string_cache_keys = (known after apply)

              [32m+[0m[0m cookies {
                  [32m+[0m[0m forward           = "none"
                  [32m+[0m[0m whitelisted_names = (known after apply)
                }
            }
        }

      [32m+[0m[0m origin {
          [32m+[0m[0m connection_attempts      = 3
          [32m+[0m[0m connection_timeout       = 10
          [32m+[0m[0m domain_name              = (known after apply)
          [32m+[0m[0m origin_id                = (known after apply)
            [90m# (2 unchanged attributes hidden)[0m[0m

          [32m+[0m[0m custom_origin_config {
              [32m+[0m[0m http_port                = 80
              [32m+[0m[0m https_port               = 443
              [32m+[0m[0m origin_keepalive_timeout = 5
              [32m+[0m[0m origin_protocol_policy   = "http-only"
              [32m+[0m[0m origin_read_timeout      = 30
              [32m+[0m[0m origin_ssl_protocols     = [
                  [32m+[0m[0m "TLSv1",
                  [32m+[0m[0m "TLSv1.1",
                  [32m+[0m[0m "TLSv1.2",
                ]
            }
        }

      [32m+[0m[0m restrictions {
          [32m+[0m[0m geo_restriction {
              [32m+[0m[0m locations        = (known after apply)
              [32m+[0m[0m restriction_type = "none"
            }
        }

      [32m+[0m[0m viewer_certificate {
          [32m+[0m[0m cloudfront_default_certificate = true
          [32m+[0m[0m minimum_protocol_version       = "TLSv1"
        }
    }

[1m  # module.cloudfront.aws_cloudfront_distribution.s3_distribution[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudfront_distribution" "s3_distribution" {
      [32m+[0m[0m arn                             = (known after apply)
      [32m+[0m[0m caller_reference                = (known after apply)
      [32m+[0m[0m comment                         = "Some comment"
      [32m+[0m[0m continuous_deployment_policy_id = (known after apply)
      [32m+[0m[0m default_root_object             = "index.html"
      [32m+[0m[0m domain_name                     = (known after apply)
      [32m+[0m[0m enabled                         = true
      [32m+[0m[0m etag                            = (known after apply)
      [32m+[0m[0m hosted_zone_id                  = (known after apply)
      [32m+[0m[0m http_version                    = "http2"
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m in_progress_validation_batches  = (known after apply)
      [32m+[0m[0m is_ipv6_enabled                 = true
      [32m+[0m[0m last_modified_time              = (known after apply)
      [32m+[0m[0m price_class                     = "PriceClass_200"
      [32m+[0m[0m retain_on_delete                = false
      [32m+[0m[0m staging                         = false
      [32m+[0m[0m status                          = (known after apply)
      [32m+[0m[0m tags                            = {
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m tags_all                        = {
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m trusted_key_groups              = (known after apply)
      [32m+[0m[0m trusted_signers                 = (known after apply)
      [32m+[0m[0m wait_for_deployment             = true

      [32m+[0m[0m default_cache_behavior {
          [32m+[0m[0m allowed_methods        = [
              [32m+[0m[0m "DELETE",
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
              [32m+[0m[0m "OPTIONS",
              [32m+[0m[0m "PATCH",
              [32m+[0m[0m "POST",
              [32m+[0m[0m "PUT",
            ]
          [32m+[0m[0m cached_methods         = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
            ]
          [32m+[0m[0m compress               = false
          [32m+[0m[0m default_ttl            = 3600
          [32m+[0m[0m max_ttl                = 86400
          [32m+[0m[0m min_ttl                = 0
          [32m+[0m[0m target_origin_id       = (known after apply)
          [32m+[0m[0m trusted_key_groups     = (known after apply)
          [32m+[0m[0m trusted_signers        = (known after apply)
          [32m+[0m[0m viewer_protocol_policy = "allow-all"

          [32m+[0m[0m forwarded_values {
              [32m+[0m[0m headers                 = (known after apply)
              [32m+[0m[0m query_string            = false
              [32m+[0m[0m query_string_cache_keys = (known after apply)

              [32m+[0m[0m cookies {
                  [32m+[0m[0m forward           = "none"
                  [32m+[0m[0m whitelisted_names = (known after apply)
                }
            }
        }

      [32m+[0m[0m ordered_cache_behavior {
          [32m+[0m[0m allowed_methods        = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
              [32m+[0m[0m "OPTIONS",
            ]
          [32m+[0m[0m cached_methods         = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
              [32m+[0m[0m "OPTIONS",
            ]
          [32m+[0m[0m compress               = true
          [32m+[0m[0m default_ttl            = 86400
          [32m+[0m[0m max_ttl                = 31536000
          [32m+[0m[0m min_ttl                = 0
          [32m+[0m[0m path_pattern           = "/content/immutable/*"
          [32m+[0m[0m target_origin_id       = (known after apply)
          [32m+[0m[0m viewer_protocol_policy = "redirect-to-https"

          [32m+[0m[0m forwarded_values {
              [32m+[0m[0m headers                 = [
                  [32m+[0m[0m "Origin",
                ]
              [32m+[0m[0m query_string            = false
              [32m+[0m[0m query_string_cache_keys = (known after apply)

              [32m+[0m[0m cookies {
                  [32m+[0m[0m forward = "none"
                }
            }
        }
      [32m+[0m[0m ordered_cache_behavior {
          [32m+[0m[0m allowed_methods        = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
              [32m+[0m[0m "OPTIONS",
            ]
          [32m+[0m[0m cached_methods         = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "HEAD",
            ]
          [32m+[0m[0m compress               = true
          [32m+[0m[0m default_ttl            = 3600
          [32m+[0m[0m max_ttl                = 86400
          [32m+[0m[0m min_ttl                = 0
          [32m+[0m[0m path_pattern           = "/content/*"
          [32m+[0m[0m target_origin_id       = (known after apply)
          [32m+[0m[0m viewer_protocol_policy = "redirect-to-https"

          [32m+[0m[0m forwarded_values {
              [32m+[0m[0m headers                 = (known after apply)
              [32m+[0m[0m query_string            = false
              [32m+[0m[0m query_string_cache_keys = (known after apply)

              [32m+[0m[0m cookies {
                  [32m+[0m[0m forward = "none"
                }
            }
        }

      [32m+[0m[0m origin {
          [32m+[0m[0m connection_attempts      = 3
          [32m+[0m[0m connection_timeout       = 10
          [32m+[0m[0m domain_name              = (known after apply)
          [32m+[0m[0m origin_id                = (known after apply)
            [90m# (2 unchanged attributes hidden)[0m[0m
        }

      [32m+[0m[0m restrictions {
          [32m+[0m[0m geo_restriction {
              [32m+[0m[0m locations        = (known after apply)
              [32m+[0m[0m restriction_type = "none"
            }
        }

      [32m+[0m[0m viewer_certificate {
          [32m+[0m[0m cloudfront_default_certificate = true
          [32m+[0m[0m minimum_protocol_version       = "TLSv1"
        }
    }

[1m  # module.cloudfront.aws_cloudfront_origin_access_identity.origin_access_identity[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudfront_origin_access_identity" "origin_access_identity" {
      [32m+[0m[0m caller_reference                = (known after apply)
      [32m+[0m[0m cloudfront_access_identity_path = (known after apply)
      [32m+[0m[0m etag                            = (known after apply)
      [32m+[0m[0m iam_arn                         = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m s3_canonical_user_id            = (known after apply)
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.s3.aws_s3_bucket.root_static[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "root_static" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = "public-read"
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "root-cloudresumechallenge.cloudsmithlabs.com"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = true
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "s3:GetObject"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = "*"
                      [32m+[0m[0m Resource  = "arn:aws:s3:::root-cloudresumechallenge.cloudsmithlabs.com/*"
                      [32m+[0m[0m Sid       = "PublicReadGetObject"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags_all                    = (known after apply)
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule {
          [32m+[0m[0m allowed_headers = [
              [32m+[0m[0m "Authorization",
              [32m+[0m[0m "Content-Length",
            ]
          [32m+[0m[0m allowed_methods = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "POST",
            ]
          [32m+[0m[0m allowed_origins = [
              [32m+[0m[0m "*",
            ]
          [32m+[0m[0m max_age_seconds = 10
        }

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website {
          [32m+[0m[0m redirect_all_requests_to = (known after apply)
        }
    }

[1m  # module.s3.aws_s3_bucket.static[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "static" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = "public-read"
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "cloudresumechallenge.cloudsmithlabs.com"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = true
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "s3:GetObject"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = "*"
                      [32m+[0m[0m Resource  = "arn:aws:s3:::cloudresumechallenge.cloudsmithlabs.com/*"
                      [32m+[0m[0m Sid       = "PublicReadGetObject"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags_all                    = (known after apply)
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule {
          [32m+[0m[0m allowed_headers = [
              [32m+[0m[0m "Authorization",
              [32m+[0m[0m "Content-Length",
            ]
          [32m+[0m[0m allowed_methods = [
              [32m+[0m[0m "GET",
              [32m+[0m[0m "POST",
            ]
          [32m+[0m[0m allowed_origins = [
              [32m+[0m[0m "*",
            ]
          [32m+[0m[0m max_age_seconds = 10
        }

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website {
          [32m+[0m[0m error_document = "404.html"
          [32m+[0m[0m index_document = "index.html"
        }
    }

[1mPlan:[0m 5 to add, 0 to change, 0 to destroy.
[0m[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33m│[0m [0m
[33m│[0m [0m[0m  with module.s3.aws_s3_bucket.static,
[33m│[0m [0m  on modules/s3/main.tf line 1, in resource "aws_s3_bucket" "static":
[33m│[0m [0m   1: resource "aws_s3_bucket" "static" [4m{[0m[0m
[33m│[0m [0m
[33m│[0m [0mUse the aws_s3_bucket_website_configuration resource instead
[33m│[0m [0m
[33m│[0m [0m(and 11 more similar warnings elsewhere)
[33m╵[0m[0m
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
